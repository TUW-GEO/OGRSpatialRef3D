Microsoft (R) COFF/PE Dumper Version 10.00.30319.01
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file ogr.lib

File Type: LIBRARY

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall GDALWarpKernel::GDALWarpKernel(class GDALWarpKernel const &)
   /EXPORT:const GDALWarpKernel::`vftable',DATA
   /EXPORT:public: class GDALWarpKernel & __thiscall GDALWarpKernel::operator=(class GDALWarpKernel const &)
   /EXPORT:public: __thiscall GDALWarpOperation::GDALWarpOperation(class GDALWarpOperation const &)
   /EXPORT:const GDALWarpOperation::`vftable',DATA
   /EXPORT:public: class GDALWarpOperation & __thiscall GDALWarpOperation::operator=(class GDALWarpOperation const &)
   /EXPORT:public: __thiscall OGRSpatialReference3D::OGRSpatialReference3D(class OGRSpatialReference3D const &)
   /EXPORT:const OGRSpatialReference3D::`vftable',DATA
   /EXPORT:public: class OGRSpatialReference3D & __thiscall OGRSpatialReference3D::operator=(class OGRSpatialReference3D const &)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation3D::~OGRCoordinateTransformation3D(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation3D::OGRCoordinateTransformation3D(class OGRCoordinateTransformation3D const &)
   /EXPORT:const OGRCoordinateTransformation3D::`vftable',DATA
   /EXPORT:public: class OGRCoordinateTransformation3D & __thiscall OGRCoordinateTransformation3D::operator=(class OGRCoordinateTransformation3D const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: virtual __thiscall OGRProj4CT3D::~OGRProj4CT3D(void)
   /EXPORT:public: __thiscall OGRProj4CT3D::OGRProj4CT3D(class OGRProj4CT3D const &)
   /EXPORT:const OGRProj4CT3D::`vftable',DATA
   /EXPORT:public: virtual class OGRSpatialReference3D * __thiscall OGRProj4CT3D::GetSourceCS(void)
   /EXPORT:public: virtual class OGRSpatialReference3D * __thiscall OGRProj4CT3D::GetTargetCS(void)
   /EXPORT:public: virtual int __thiscall OGRProj4CT3D::Transform(int,double *,double *,double *)
   /EXPORT:public: virtual int __thiscall OGRProj4CT3D::TransformEx(int,double *,double *,double *,int *)
   /EXPORT:public: class OGRProj4CT3D & __thiscall OGRProj4CT3D::operator=(class OGRProj4CT3D const &)
   /EXPORT:public: __thiscall OGRProj4CT3D::OGRProj4CT3D(void)
   /EXPORT:class OGRCoordinateTransformation3D * __cdecl OGRCreateCoordinateTransformation3D(class OGRSpatialReference3D *,class OGRSpatialReference3D *)
   /EXPORT:public: int __thiscall OGRProj4CT3D::Initialize(class OGRSpatialReference3D *,class OGRSpatialReference3D *)
   /EXPORT:private: int __thiscall OGRProj4CT3D::InitializeNoLock(class OGRSpatialReference3D *,class OGRSpatialReference3D *)
   /EXPORT:public: int __thiscall OGRProj4CT3D::ct3D_pj_transform(struct PJconsts *,struct PJconsts *,long,int,double *,double *,double *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall GDALWarpKernel::GDALWarpKernel(class GDALWarpKernel const &)
   /EXPORT:const GDALWarpKernel::`vftable',DATA
   /EXPORT:public: class GDALWarpKernel & __thiscall GDALWarpKernel::operator=(class GDALWarpKernel const &)
   /EXPORT:public: __thiscall GDALWarpOperation::GDALWarpOperation(class GDALWarpOperation const &)
   /EXPORT:const GDALWarpOperation::`vftable',DATA
   /EXPORT:public: class GDALWarpOperation & __thiscall GDALWarpOperation::operator=(class GDALWarpOperation const &)
   /EXPORT:public: __thiscall OGRSpatialReference3D::OGRSpatialReference3D(class OGRSpatialReference3D const &)
   /EXPORT:const OGRSpatialReference3D::`vftable',DATA
   /EXPORT:public: class OGRSpatialReference3D & __thiscall OGRSpatialReference3D::operator=(class OGRSpatialReference3D const &)
   /EXPORT:public: virtual __thiscall OGRSpatialReference3D::~OGRSpatialReference3D(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation3D::~OGRCoordinateTransformation3D(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation3D::OGRCoordinateTransformation3D(class OGRCoordinateTransformation3D const &)
   /EXPORT:const OGRCoordinateTransformation3D::`vftable',DATA
   /EXPORT:public: class OGRCoordinateTransformation3D & __thiscall OGRCoordinateTransformation3D::operator=(class OGRCoordinateTransformation3D const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: char * * __thiscall GDALMultiDomainMetadata::GetDomainList(void)
   /EXPORT:public: class GDALMultiDomainMetadata & __thiscall GDALMultiDomainMetadata::operator=(class GDALMultiDomainMetadata const &)
   /EXPORT:public: __thiscall GDALMajorObject::GDALMajorObject(class GDALMajorObject const &)
   /EXPORT:const GDALMajorObject::`vftable',DATA
   /EXPORT:public: class GDALMajorObject & __thiscall GDALMajorObject::operator=(class GDALMajorObject const &)
   /EXPORT:public: char * * __thiscall GDALDefaultOverviews::GetSiblingFiles(void)
   /EXPORT:public: __thiscall GDALDefaultOverviews::GDALDefaultOverviews(class GDALDefaultOverviews const &)
   /EXPORT:public: class GDALDefaultOverviews & __thiscall GDALDefaultOverviews::operator=(class GDALDefaultOverviews const &)
   /EXPORT:public: class GDALOpenInfo & __thiscall GDALOpenInfo::operator=(class GDALOpenInfo const &)
   /EXPORT:public: enum GDALAccess __thiscall GDALDataset::GetAccess(void)
   /EXPORT:public: __thiscall GDALDataset::GDALDataset(class GDALDataset const &)
   /EXPORT:const GDALDataset::`vftable',DATA
   /EXPORT:public: class GDALDataset & __thiscall GDALDataset::operator=(class GDALDataset const &)
   /EXPORT:public: void __thiscall GDALRasterBlock::AddLock(void)
   /EXPORT:public: void __thiscall GDALRasterBlock::DropLock(void)
   /EXPORT:public: enum GDALDataType __thiscall GDALRasterBlock::GetDataType(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetXOff(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetYOff(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetXSize(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetYSize(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetDirty(void)
   /EXPORT:public: int __thiscall GDALRasterBlock::GetLockCount(void)
   /EXPORT:public: void * __thiscall GDALRasterBlock::GetDataRef(void)
   /EXPORT:public: class GDALRasterBand * __thiscall GDALRasterBlock::GetBand(void)
   /EXPORT:public: __thiscall GDALRasterBlock::GDALRasterBlock(class GDALRasterBlock const &)
   /EXPORT:const GDALRasterBlock::`vftable',DATA
   /EXPORT:public: class GDALRasterBlock & __thiscall GDALRasterBlock::operator=(class GDALRasterBlock const &)
   /EXPORT:public: __thiscall GDALColorTable::GDALColorTable(class GDALColorTable const &)
   /EXPORT:public: class GDALColorTable & __thiscall GDALColorTable::operator=(class GDALColorTable const &)
   /EXPORT:public: void __thiscall GDALColorTable::`default constructor closure'(void)
   /EXPORT:public: __thiscall GDALRasterBand::GDALRasterBand(class GDALRasterBand const &)
   /EXPORT:const GDALRasterBand::`vftable',DATA
   /EXPORT:public: class GDALRasterBand & __thiscall GDALRasterBand::operator=(class GDALRasterBand const &)
   /EXPORT:public: __thiscall GDALAllValidMaskBand::GDALAllValidMaskBand(class GDALAllValidMaskBand const &)
   /EXPORT:const GDALAllValidMaskBand::`vftable',DATA
   /EXPORT:public: class GDALAllValidMaskBand & __thiscall GDALAllValidMaskBand::operator=(class GDALAllValidMaskBand const &)
   /EXPORT:public: __thiscall GDALNoDataMaskBand::GDALNoDataMaskBand(class GDALNoDataMaskBand const &)
   /EXPORT:const GDALNoDataMaskBand::`vftable',DATA
   /EXPORT:public: class GDALNoDataMaskBand & __thiscall GDALNoDataMaskBand::operator=(class GDALNoDataMaskBand const &)
   /EXPORT:public: __thiscall GDALNoDataValuesMaskBand::GDALNoDataValuesMaskBand(class GDALNoDataValuesMaskBand const &)
   /EXPORT:const GDALNoDataValuesMaskBand::`vftable',DATA
   /EXPORT:public: class GDALNoDataValuesMaskBand & __thiscall GDALNoDataValuesMaskBand::operator=(class GDALNoDataValuesMaskBand const &)
   /EXPORT:public: __thiscall GDALDriver::GDALDriver(class GDALDriver const &)
   /EXPORT:const GDALDriver::`vftable',DATA
   /EXPORT:public: class GDALDriver & __thiscall GDALDriver::operator=(class GDALDriver const &)
   /EXPORT:public: __thiscall GDALDriverManager::GDALDriverManager(class GDALDriverManager const &)
   /EXPORT:const GDALDriverManager::`vftable',DATA
   /EXPORT:public: class GDALDriverManager & __thiscall GDALDriverManager::operator=(class GDALDriverManager const &)
   /EXPORT:public: class GDALDataset * __thiscall GDALAsyncReader::GetGDALDataset(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetXOffset(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetYOffset(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetXSize(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetYSize(void)
   /EXPORT:public: void * __thiscall GDALAsyncReader::GetBuffer(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetBufferXSize(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetBufferYSize(void)
   /EXPORT:public: enum GDALDataType __thiscall GDALAsyncReader::GetBufferType(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetBandCount(void)
   /EXPORT:public: int * __thiscall GDALAsyncReader::GetBandMap(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetPixelSpace(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetLineSpace(void)
   /EXPORT:public: int __thiscall GDALAsyncReader::GetBandSpace(void)
   /EXPORT:public: __thiscall GDALAsyncReader::GDALAsyncReader(class GDALAsyncReader const &)
   /EXPORT:const GDALAsyncReader::`vftable',DATA
   /EXPORT:public: class GDALAsyncReader & __thiscall GDALAsyncReader::operator=(class GDALAsyncReader const &)
   /EXPORT:public: __thiscall OGRSpatialReference3D::OGRSpatialReference3D(void)
   /EXPORT:public: __thiscall OGRSpatialReference3D::OGRSpatialReference3D(class OGRSpatialReference const &)
   /EXPORT:public: __thiscall OGRSpatialReference3D::OGRSpatialReference3D(char const *,char const *,char const *,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference3D::SetVScale(double)
   /EXPORT:public: int __thiscall OGRSpatialReference3D::SetVOffset(double)
   /EXPORT:public: int __thiscall OGRSpatialReference3D::SetVCorrModel(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference3D::SetGeoidModel(char const *)
   /EXPORT:public: double __thiscall OGRSpatialReference3D::GetVOffset(void)
   /EXPORT:public: double __thiscall OGRSpatialReference3D::GetVScale(void)
   /EXPORT:public: void __thiscall OGRSpatialReference3D::vgridshift(double,double,double *)
   /EXPORT:public: void __thiscall OGRSpatialReference3D::interpolateZ(class std::vector<class GDALDataset *,class std::allocator<class GDALDataset *> > const &,class std::vector<class Point2D,class std::allocator<class Point2D> > &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,enum GDALResampleAlg)
   /EXPORT:public: void __thiscall OGRSpatialReference3D::interpolateZ_Generalize(class std::vector<class GDALDataset *,class std::allocator<class GDALDataset *> > const &,class std::vector<class GDALDataset *,class std::allocator<class GDALDataset *> > const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,class std::vector<class Point2D,class std::allocator<class Point2D> > &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,enum GDALResampleAlg)
   /EXPORT:public: __thiscall OGRCoordinateTransformation3D::OGRCoordinateTransformation3D(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"uuid.lib"
   /DEFAULTLIB:"uuid.lib"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: virtual class OGRSpatialReference * __thiscall OGRLayer::GetSpatialRef(void)
   /EXPORT:public: class OGRLayerAttrIndex * __thiscall OGRLayer::GetIndex(void)
   /EXPORT:public: __thiscall OGRLayer::OGRLayer(class OGRLayer const &)
   /EXPORT:const OGRLayer::`vftable',DATA
   /EXPORT:public: class OGRLayer & __thiscall OGRLayer::operator=(class OGRLayer const &)
   /EXPORT:public: __thiscall OGRDataSource::OGRDataSource(class OGRDataSource const &)
   /EXPORT:const OGRDataSource::`vftable',DATA
   /EXPORT:public: class OGRDataSource & __thiscall OGRDataSource::operator=(class OGRDataSource const &)
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(void)
   /EXPORT:const OGRSFDriver::`vftable',DATA
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(class OGRSFDriver const &)
   /EXPORT:public: class OGRSFDriver & __thiscall OGRSFDriver::operator=(class OGRSFDriver const &)
   /EXPORT:public: int __thiscall OGRSFDriverRegistrar::GetOpenDSCount(void)
   /EXPORT:public: class OGRSFDriverRegistrar & __thiscall OGRSFDriverRegistrar::operator=(class OGRSFDriverRegistrar const &)
   /EXPORT:_OGRGeocodeCreateSession
   /EXPORT:_OGRGeocodeDestroySession
   /EXPORT:_OGRGeocode
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:_OGRGeocodeReverse
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:_OGRGeocodeFreeResult
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:int __cdecl OGRWriteToShapeBin(class OGRGeometry *,unsigned char * *,int *)
   /EXPORT:int __cdecl OGRCreateFromShapeBin(unsigned char *,class OGRGeometry * *,int)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"

   Linker Directives
   -----------------
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:_OSRImportFromERM
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromERM(char const *,char const *,char const *)
   /EXPORT:_OSRExportToERM
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToERM(char *,char *,char *)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:_OSRImportFromOzi
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromOzi(char const *,char const *,char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromOzi(char const * const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:_OSRImportFromPanorama
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromPanorama(long,long,long,double *)
   /EXPORT:_OSRExportToPanorama
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToPanorama(long *,long *,long *,long *,double *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromDict(char const *,char const *)
   /EXPORT:_OSRImportFromDict

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:_OSRImportFromUSGS
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromUSGS(long,long,double *,long,int)
   /EXPORT:_OSRExportToUSGS
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToUSGS(long *,long *,double * *,long *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:_OSRImportFromPCI
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromPCI(char const *,char const *,double *)
   /EXPORT:_OSRExportToPCI
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToPCI(char * *,char * *,double * *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:_OGR_G_CreateFromGMLTree
   /EXPORT:_OGR_G_CreateFromGML
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:_OGR_G_ExportEnvelopeToGMLTree
   /EXPORT:_OGR_G_ExportToGMLTree
   /EXPORT:_OGR_G_ExportToGML
   /EXPORT:_OGR_G_ExportToGMLEx
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:_OGRBuildPolygonFromEdges

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToXML(char * *,char const *)const 
   /EXPORT:_OSRExportToXML
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromXML(char const *)
   /EXPORT:_OSRImportFromXML
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: int __thiscall OGRSpatialReference::Validate(void)
   /EXPORT:private: static int __cdecl OGRSpatialReference::Validate(class OGR_SRSNode *)
   /EXPORT:private: static int __cdecl OGRSpatialReference::ValidateProjection(class OGR_SRSNode *)
   /EXPORT:private: static int __cdecl OGRSpatialReference::ValidateAxis(class OGR_SRSNode *)
   /EXPORT:private: static int __cdecl OGRSpatialReference::ValidateUnit(class OGR_SRSNode *)
   /EXPORT:private: static int __cdecl OGRSpatialReference::ValidateVertDatum(class OGR_SRSNode *)
   /EXPORT:private: static int __cdecl OGRSpatialReference::ValidateAuthority(class OGR_SRSNode *)
   /EXPORT:_OSRValidate
   /EXPORT:private: static int __cdecl OGRSpatialReference::IsAliasFor(char const *,char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: virtual class OGRSpatialReference * __thiscall OGRLayer::GetSpatialRef(void)
   /EXPORT:public: class OGRLayerAttrIndex * __thiscall OGRLayer::GetIndex(void)
   /EXPORT:public: __thiscall OGRLayer::OGRLayer(class OGRLayer const &)
   /EXPORT:const OGRLayer::`vftable',DATA
   /EXPORT:public: class OGRLayer & __thiscall OGRLayer::operator=(class OGRLayer const &)
   /EXPORT:public: __thiscall OGRDataSource::OGRDataSource(class OGRDataSource const &)
   /EXPORT:const OGRDataSource::`vftable',DATA
   /EXPORT:public: class OGRDataSource & __thiscall OGRDataSource::operator=(class OGRDataSource const &)
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(void)
   /EXPORT:const OGRSFDriver::`vftable',DATA
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(class OGRSFDriver const &)
   /EXPORT:public: class OGRSFDriver & __thiscall OGRSFDriver::operator=(class OGRSFDriver const &)
   /EXPORT:public: int __thiscall OGRSFDriverRegistrar::GetOpenDSCount(void)
   /EXPORT:public: class OGRSFDriverRegistrar & __thiscall OGRSFDriverRegistrar::operator=(class OGRSFDriverRegistrar const &)
   /EXPORT:public: __thiscall OGRAttrIndex::OGRAttrIndex(class OGRAttrIndex const &)
   /EXPORT:const OGRAttrIndex::`vftable',DATA
   /EXPORT:public: class OGRAttrIndex & __thiscall OGRAttrIndex::operator=(class OGRAttrIndex const &)
   /EXPORT:public: __thiscall OGRLayerAttrIndex::OGRLayerAttrIndex(class OGRLayerAttrIndex const &)
   /EXPORT:const OGRLayerAttrIndex::`vftable',DATA
   /EXPORT:public: class OGRLayerAttrIndex & __thiscall OGRLayerAttrIndex::operator=(class OGRLayerAttrIndex const &)
   /EXPORT:public: __thiscall OGRFeatureQuery::OGRFeatureQuery(void)
   /EXPORT:public: __thiscall OGRFeatureQuery::~OGRFeatureQuery(void)
   /EXPORT:public: int __thiscall OGRFeatureQuery::Compile(class OGRFeatureDefn *,char const *)
   /EXPORT:public: int __thiscall OGRFeatureQuery::Evaluate(class OGRFeature *)
   /EXPORT:public: int __thiscall OGRFeatureQuery::CanUseIndex(class OGRLayer *)
   /EXPORT:private: int __thiscall OGRFeatureQuery::CanUseIndex(class swq_expr_node *,class OGRLayer *)
   /EXPORT:public: long * __thiscall OGRFeatureQuery::EvaluateAgainstIndices(class OGRLayer *,int *)
   /EXPORT:private: long * __thiscall OGRFeatureQuery::EvaluateAgainstIndices(class swq_expr_node *,class OGRLayer *,int &)
   /EXPORT:private: char * * __thiscall OGRFeatureQuery::FieldCollector(void *,char * *)
   /EXPORT:public: char * * __thiscall OGRFeatureQuery::GetUsedFields(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:_OSRImportFromESRI
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromESRI(char * *)
   /EXPORT:public: int __thiscall OGRSpatialReference::morphFromESRI(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::morphToESRI(void)
   /EXPORT:_OSRMorphToESRI
   /EXPORT:_OSRMorphFromESRI
   /EXPORT:public: int __thiscall OGRSpatialReference::ImportFromESRIStatePlaneWKT(int,char const *,char const *,int,char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::ImportFromESRIWisconsinWKT(char const *,double,double,char const *,char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleMgr::OGRStyleMgr(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: virtual __thiscall OGRStyleTool::~OGRStyleTool(void)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: char const * __thiscall OGRStylePen::GetParamStr(enum ogr_style_tool_param_pen_id,int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: void __thiscall OGRStylePen::SetParamStr(enum ogr_style_tool_param_pen_id,char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: double __thiscall OGRStylePen::GetParamDbl(enum ogr_style_tool_param_pen_id,int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: void __thiscall OGRStylePen::SetParamDbl(enum ogr_style_tool_param_pen_id,double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: int __thiscall OGRStylePen::GetParamNum(enum ogr_style_tool_param_pen_id,int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: void __thiscall OGRStylePen::SetParamNum(enum ogr_style_tool_param_pen_id,int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:private: virtual int __thiscall OGRStylePen::Parse(void)
   /EXPORT:public: virtual char const * __thiscall OGRStylePen::GetStyleString(void)
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: virtual __thiscall OGRStylePen::~OGRStylePen(void)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::GetParamStr(enum ogr_style_tool_param_brush_id,int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetParamStr(enum ogr_style_tool_param_brush_id,char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: double __thiscall OGRStyleBrush::GetParamDbl(enum ogr_style_tool_param_brush_id,int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetParamDbl(enum ogr_style_tool_param_brush_id,double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: int __thiscall OGRStyleBrush::GetParamNum(enum ogr_style_tool_param_brush_id,int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetParamNum(enum ogr_style_tool_param_brush_id,int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:private: virtual int __thiscall OGRStyleBrush::Parse(void)
   /EXPORT:public: virtual char const * __thiscall OGRStyleBrush::GetStyleString(void)
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: virtual __thiscall OGRStyleBrush::~OGRStyleBrush(void)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::GetParamStr(enum ogr_style_tool_param_symbol_id,int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetParamStr(enum ogr_style_tool_param_symbol_id,char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: double __thiscall OGRStyleSymbol::GetParamDbl(enum ogr_style_tool_param_symbol_id,int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetParamDbl(enum ogr_style_tool_param_symbol_id,double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: int __thiscall OGRStyleSymbol::GetParamNum(enum ogr_style_tool_param_symbol_id,int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetParamNum(enum ogr_style_tool_param_symbol_id,int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:private: virtual int __thiscall OGRStyleSymbol::Parse(void)
   /EXPORT:public: virtual char const * __thiscall OGRStyleSymbol::GetStyleString(void)
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: virtual __thiscall OGRStyleSymbol::~OGRStyleSymbol(void)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::GetParamStr(enum ogr_style_tool_param_label_id,int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetParamStr(enum ogr_style_tool_param_label_id,char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: double __thiscall OGRStyleLabel::GetParamDbl(enum ogr_style_tool_param_label_id,int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetParamDbl(enum ogr_style_tool_param_label_id,double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: int __thiscall OGRStyleLabel::GetParamNum(enum ogr_style_tool_param_label_id,int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetParamNum(enum ogr_style_tool_param_label_id,int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:private: virtual int __thiscall OGRStyleLabel::Parse(void)
   /EXPORT:public: virtual char const * __thiscall OGRStyleLabel::GetStyleString(void)
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: virtual __thiscall OGRStyleLabel::~OGRStyleLabel(void)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: __thiscall OGRStyleTable::~OGRStyleTable(void)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:_OGR_SM_Create
   /EXPORT:public: __thiscall OGRStyleMgr::~OGRStyleMgr(void)
   /EXPORT:_OGR_SM_Destroy
   /EXPORT:public: int __thiscall OGRStyleMgr::SetFeatureStyleString(class OGRFeature *,char const *,int)
   /EXPORT:public: char const * __thiscall OGRStyleMgr::GetStyleName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleMgr::InitFromFeature(class OGRFeature *)
   /EXPORT:public: int __thiscall OGRStyleMgr::InitStyleString(char const *)
   /EXPORT:_OGR_SM_InitFromFeature
   /EXPORT:public: char const * __thiscall OGRStyleMgr::GetStyleByName(char const *)
   /EXPORT:_OGR_SM_InitStyleString
   /EXPORT:public: char const * __thiscall OGRStyleTable::GetStyleName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleTable::Find(char const *)
   /EXPORT:public: int __thiscall OGRStyleMgr::AddStyle(char const *,char const *)
   /EXPORT:public: int __thiscall OGRStyleTable::AddStyle(char const *,char const *)
   /EXPORT:_OGR_SM_AddStyle
   /EXPORT:public: char const * __thiscall OGRStyleMgr::GetStyleString(class OGRFeature *)
   /EXPORT:public: int __thiscall OGRStyleMgr::AddPart(char const *)
   /EXPORT:public: int __thiscall OGRStyleMgr::AddPart(class OGRStyleTool *)
   /EXPORT:_OGR_SM_AddPart
   /EXPORT:public: int __thiscall OGRStyleMgr::GetPartCount(char const *)
   /EXPORT:_OGR_SM_GetPartCount
   /EXPORT:public: class OGRStyleTool * __thiscall OGRStyleMgr::GetPart(int,char const *)
   /EXPORT:public: void __thiscall OGRStyleTool::SetStyleString(char const *)
   /EXPORT:public: class OGRStyleTool * __thiscall OGRStyleMgr::CreateStyleToolFromStyleString(char const *)
   /EXPORT:_OGR_SM_GetPart
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(void)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(void)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(void)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(void)
   /EXPORT:_OGR_STBL_Create
   /EXPORT:public: void __thiscall OGRStyleTable::Clear(void)
   /EXPORT:_OGR_STBL_Destroy
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: int __thiscall OGRStyleTable::IsExist(char const *)
   /EXPORT:public: int __thiscall OGRStyleTable::RemoveStyle(char const *)
   /EXPORT:public: int __thiscall OGRStyleTable::ModifyStyle(char const *,char const *)
   /EXPORT:public: int __thiscall OGRStyleTable::SaveStyleTable(char const *)
   /EXPORT:_OGR_STBL_SaveStyleTable
   /EXPORT:public: int __thiscall OGRStyleTable::LoadStyleTable(char const *)
   /EXPORT:_OGR_STBL_LoadStyleTable
   /EXPORT:_OGR_STBL_Find
   /EXPORT:public: void __thiscall OGRStyleTable::Print(struct _iobuf *)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleTable::Clone(void)
   /EXPORT:public: void __thiscall OGRStyleTable::ResetStyleStringReading(void)
   /EXPORT:_OGR_STBL_ResetStyleStringReading
   /EXPORT:public: char const * __thiscall OGRStyleTable::GetNextStyle(void)
   /EXPORT:_OGR_STBL_GetNextStyle
   /EXPORT:public: char const * __thiscall OGRStyleTable::GetLastStyleName(void)
   /EXPORT:_OGR_STBL_GetLastStyleName
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(enum ogr_style_tool_class_id)
   /EXPORT:_OGR_ST_Create
   /EXPORT:_OGR_ST_Destroy
   /EXPORT:public: char const * __thiscall OGRStyleTool::GetStyleString(struct ogr_style_param const *,struct ogr_style_value *,int)
   /EXPORT:public: enum ogr_style_tool_class_id __thiscall OGRStyleTool::GetType(void)
   /EXPORT:public: int __thiscall OGRStyleTool::GetRGBFromString(char const *,int &,int &,int &,int &)
   /EXPORT:public: int __thiscall OGRStyleTool::GetSpecificId(char const *,char const *)
   /EXPORT:_OGR_ST_GetType
   /EXPORT:_OGR_ST_GetUnit
   /EXPORT:public: void __thiscall OGRStyleTool::SetUnit(enum ogr_style_tool_units_id,double)
   /EXPORT:_OGR_ST_SetUnit
   /EXPORT:protected: int __thiscall OGRStyleTool::Parse(struct ogr_style_param const *,struct ogr_style_value *,int)
   /EXPORT:public: void __thiscall OGRStyleTool::SetParamStr(struct ogr_style_param const &,struct ogr_style_value &,char const *)
   /EXPORT:public: void __thiscall OGRStyleTool::SetInternalInputUnitFromParam(char *)
   /EXPORT:public: double __thiscall OGRStyleTool::ComputeWithUnit(double,enum ogr_style_tool_units_id)
   /EXPORT:public: int __thiscall OGRStyleTool::ComputeWithUnit(int,enum ogr_style_tool_units_id)
   /EXPORT:public: char const * __thiscall OGRStyleTool::GetParamStr(struct ogr_style_param const &,struct ogr_style_value &,int &)
   /EXPORT:public: int __thiscall OGRStyleTool::GetParamNum(struct ogr_style_param const &,struct ogr_style_value &,int &)
   /EXPORT:public: double __thiscall OGRStyleTool::GetParamDbl(struct ogr_style_param const &,struct ogr_style_value &,int &)
   /EXPORT:public: void __thiscall OGRStyleTool::SetParamNum(struct ogr_style_param const &,struct ogr_style_value &,int)
   /EXPORT:public: void __thiscall OGRStyleTool::SetParamDbl(struct ogr_style_param const &,struct ogr_style_value &,double)
   /EXPORT:_OGR_ST_GetParamStr
   /EXPORT:_OGR_ST_GetParamNum
   /EXPORT:_OGR_ST_GetParamDbl
   /EXPORT:_OGR_ST_SetParamStr
   /EXPORT:_OGR_ST_SetParamNum
   /EXPORT:_OGR_ST_SetParamDbl
   /EXPORT:_OGR_ST_GetStyleString
   /EXPORT:_OGR_ST_GetRGBFromString
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:_OCTDestroyCoordinateTransformation@4
   /EXPORT:public: static void __cdecl OGRCoordinateTransformation::DestroyCT(class OGRCoordinateTransformation *)
   /EXPORT:class OGRCoordinateTransformation * __cdecl OGRCreateCoordinateTransformation(class OGRSpatialReference *,class OGRSpatialReference *)
   /EXPORT:_OCTNewCoordinateTransformation@8
   /EXPORT:_OCTTransform@20
   /EXPORT:_OCTTransformEx@24
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:int __cdecl OSRGetEllipsoidInfo(int,char * *,double *,double *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromEPSG(int)
   /EXPORT:public: int __thiscall OGRSpatialReference::EPSGTreatsAsNorthingEasting(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromEPSGA(int)
   /EXPORT:_OSRImportFromEPSG@8
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:_OSRImportFromEPSGA@8
   /EXPORT:public: int __thiscall OGRSpatialReference::SetStatePlane(int,int,char const *,double)
   /EXPORT:_OSRSetStatePlane
   /EXPORT:_OSRSetStatePlaneWithUnits
   /EXPORT:public: int __thiscall OGRSpatialReference::GetEPSGGeogCS(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::AutoIdentifyEPSG(void)
   /EXPORT:_OSRAutoIdentifyEPSG
   /EXPORT:public: int __thiscall OGRSpatialReference::EPSGTreatsAsLatLong(void)
   /EXPORT:_OSREPSGTreatsAsLatLong
   /EXPORT:_OSREPSGTreatsAsNorthingEasting
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:_OSRImportFromProj4
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromProj4(char const *)
   /EXPORT:_OSRExportToProj4@8
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToProj4(char * *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRSpatialReference::OGRSpatialReference(char const *)
   /EXPORT:public: virtual __thiscall OGRSpatialReference::~OGRSpatialReference(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromWkt(char * *)
   /EXPORT:const OGRSpatialReference::`vftable',DATA
   /EXPORT:_OSRNewSpatialReference@4
   /EXPORT:public: __thiscall OGRSpatialReference::OGRSpatialReference(class OGRSpatialReference const &)
   /EXPORT:public: static void __cdecl OGRSpatialReference::DestroySpatialReference(class OGRSpatialReference *)
   /EXPORT:_OSRDestroySpatialReference@4
   /EXPORT:public: void __thiscall OGRSpatialReference::Clear(void)
   /EXPORT:public: class OGRSpatialReference & __thiscall OGRSpatialReference::operator=(class OGRSpatialReference const &)
   /EXPORT:public: int __thiscall OGRSpatialReference::Reference(void)
   /EXPORT:_OSRReference
   /EXPORT:public: int __thiscall OGRSpatialReference::Dereference(void)
   /EXPORT:_OSRDereference
   /EXPORT:public: void __thiscall OGRSpatialReference::Release(void)
   /EXPORT:_OSRRelease
   /EXPORT:public: void __thiscall OGRSpatialReference::SetRoot(class OGR_SRSNode *)
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetAttrNode(char const *)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetAttrNode(char const *)const 
   /EXPORT:public: char const * __thiscall OGRSpatialReference::GetAttrValue(char const *,int)const 
   /EXPORT:_OSRGetAttrValue@12
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRSpatialReference::Clone(void)const 
   /EXPORT:_OSRClone@4
   /EXPORT:public: void __thiscall OGRSpatialReference::dumpReadable(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToPrettyWkt(char * *,int)const 
   /EXPORT:_OSRExportToPrettyWkt@12
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToWkt(char * *)const 
   /EXPORT:_OSRExportToWkt@8
   /EXPORT:_OSRImportFromWkt
   /EXPORT:public: int __thiscall OGRSpatialReference::SetNode(char const *,char const *)
   /EXPORT:_OSRSetAttrValue@12
   /EXPORT:public: int __thiscall OGRSpatialReference::SetNode(char const *,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetAngularUnits(char const *,double)
   /EXPORT:_OSRSetAngularUnits
   /EXPORT:public: double __thiscall OGRSpatialReference::GetAngularUnits(char * *)const 
   /EXPORT:_OSRGetAngularUnits
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLinearUnitsAndUpdateParameters(char const *,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetProjParm(char const *,double)
   /EXPORT:public: double __thiscall OGRSpatialReference::GetProjParm(char const *,double,int *)const 
   /EXPORT:public: static int __cdecl OGRSpatialReference::IsLinearParameter(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLinearUnits(char const *,double)
   /EXPORT:public: double __thiscall OGRSpatialReference::GetLinearUnits(char * *)const 
   /EXPORT:_OSRSetLinearUnitsAndUpdateParameters
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTargetLinearUnits(char const *,char const *,double)
   /EXPORT:_OSRSetLinearUnits
   /EXPORT:public: int __thiscall OGRSpatialReference::IsVertical(void)const 
   /EXPORT:_OSRSetTargetLinearUnits
   /EXPORT:public: double __thiscall OGRSpatialReference::GetTargetLinearUnits(char const *,char * *)const 
   /EXPORT:_OSRGetLinearUnits
   /EXPORT:_OSRGetTargetLinearUnits
   /EXPORT:public: double __thiscall OGRSpatialReference::GetPrimeMeridian(char * *)const 
   /EXPORT:_OSRGetPrimeMeridian
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGeogCS(char const *,char const *,char const *,double,double,char const *,double,char const *,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::CopyGeogCSFrom(class OGRSpatialReference const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::IsGeocentric(void)const 
   /EXPORT:_OSRSetGeogCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetWellKnownGeogCS(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::IsGeographic(void)const 
   /EXPORT:_OSRSetWellKnownGeogCS
   /EXPORT:_OSRCopyGeogCSFrom
   /EXPORT:public: int __thiscall OGRSpatialReference::SetFromUserInput(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromUrl(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromWMSAUTO(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromCRSURL(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromURN(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:_OSRSetFromUserInput@8
   /EXPORT:_OSRImportFromUrl
   /EXPORT:private: int __thiscall OGRSpatialReference::importFromURNPart(char const *,char const *,char const *)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: int __thiscall OGRSpatialReference::SetAuthority(char const *,char const *,int)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetMollweide(double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEquirectangular(double,double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetOrthographic(double,double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTM(double,double,double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetUTM(int,int)
   /EXPORT:public: double __thiscall OGRSpatialReference::GetSemiMajor(int *)const 
   /EXPORT:_OSRGetSemiMajor
   /EXPORT:public: double __thiscall OGRSpatialReference::GetInvFlattening(int *)const 
   /EXPORT:_OSRGetInvFlattening
   /EXPORT:public: double __thiscall OGRSpatialReference::GetSemiMinor(int *)const 
   /EXPORT:_OSRGetSemiMinor
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLocalCS(char const *)
   /EXPORT:_OSRSetLocalCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGeocCS(char const *)
   /EXPORT:_OSRSetGeocCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetVertCS(char const *,char const *,int)
   /EXPORT:public: int __thiscall OGRSpatialReference::IsProjected(void)const 
   /EXPORT:_OSRSetVertCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetCompoundCS(char const *,class OGRSpatialReference const *,class OGRSpatialReference const *)
   /EXPORT:_OSRSetCompoundCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetProjCS(char const *)
   /EXPORT:_OSRSetProjCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetProjection(char const *)
   /EXPORT:_OSRSetProjection
   /EXPORT:_OSRSetProjParm
   /EXPORT:public: int __thiscall OGRSpatialReference::FindProjParm(char const *,class OGR_SRSNode const *)const 
   /EXPORT:_OSRGetProjParm
   /EXPORT:public: double __thiscall OGRSpatialReference::GetNormProjParm(char const *,double,int *)const 
   /EXPORT:public: static int __cdecl OGRSpatialReference::IsAngularParameter(char const *)
   /EXPORT:private: void __thiscall OGRSpatialReference::GetNormInfo(void)const 
   /EXPORT:_OSRGetNormProjParm
   /EXPORT:public: int __thiscall OGRSpatialReference::SetNormProjParm(char const *,double)
   /EXPORT:_OSRSetNormProjParm
   /EXPORT:_OSRSetTM
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTMVariant(char const *,double,double,double,double,double)
   /EXPORT:_OSRSetTMVariant
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTMSO(double,double,double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTPED(double,double,double,double,double,double)
   /EXPORT:_OSRSetTMSO
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTMG(double,double,double,double)
   /EXPORT:_OSRSetTMG
   /EXPORT:public: int __thiscall OGRSpatialReference::SetACEA(double,double,double,double,double,double)
   /EXPORT:_OSRSetACEA
   /EXPORT:public: int __thiscall OGRSpatialReference::SetAE(double,double,double,double)
   /EXPORT:_OSRSetAE
   /EXPORT:public: int __thiscall OGRSpatialReference::SetBonne(double,double,double,double)
   /EXPORT:_OSRSetBonne
   /EXPORT:public: int __thiscall OGRSpatialReference::SetCEA(double,double,double,double)
   /EXPORT:_OSRSetCEA
   /EXPORT:public: int __thiscall OGRSpatialReference::SetCS(double,double,double,double)
   /EXPORT:_OSRSetCS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEC(double,double,double,double,double,double)
   /EXPORT:_OSRSetEC
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEckert(int,double,double,double)
   /EXPORT:_OSRSetEckert
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEckertIV(double,double,double)
   /EXPORT:_OSRSetEckertIV
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEckertVI(double,double,double)
   /EXPORT:_OSRSetEckertVI
   /EXPORT:_OSRSetEquirectangular
   /EXPORT:public: int __thiscall OGRSpatialReference::SetEquirectangular2(double,double,double,double,double)
   /EXPORT:_OSRSetEquirectangular2
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGS(double,double,double)
   /EXPORT:_OSRSetGS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGH(double,double,double)
   /EXPORT:_OSRSetGH
   /EXPORT:public: int __thiscall OGRSpatialReference::SetIGH(void)
   /EXPORT:_OSRSetIGH
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGEOS(double,double,double,double)
   /EXPORT:_OSRSetGEOS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGaussSchreiberTMercator(double,double,double,double,double)
   /EXPORT:_OSRSetGaussSchreiberTMercator
   /EXPORT:public: int __thiscall OGRSpatialReference::SetGnomonic(double,double,double,double)
   /EXPORT:_OSRSetGnomonic
   /EXPORT:public: int __thiscall OGRSpatialReference::SetHOMAC(double,double,double,double,double,double,double)
   /EXPORT:public: int __thiscall OGRSpatialReference::SetHOM(double,double,double,double,double,double,double)
   /EXPORT:_OSRSetHOM
   /EXPORT:public: int __thiscall OGRSpatialReference::SetHOM2PNO(double,double,double,double,double,double,double,double)
   /EXPORT:_OSRSetHOM2PNO
   /EXPORT:public: int __thiscall OGRSpatialReference::SetIWMPolyconic(double,double,double,double,double)
   /EXPORT:_OSRSetIWMPolyconic
   /EXPORT:public: int __thiscall OGRSpatialReference::SetKrovak(double,double,double,double,double,double,double)
   /EXPORT:_OSRSetKrovak
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLAEA(double,double,double,double)
   /EXPORT:_OSRSetLAEA
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLCC(double,double,double,double,double,double)
   /EXPORT:_OSRSetLCC
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLCC1SP(double,double,double,double,double)
   /EXPORT:_OSRSetLCC1SP
   /EXPORT:public: int __thiscall OGRSpatialReference::SetLCCB(double,double,double,double,double,double)
   /EXPORT:_OSRSetLCCB
   /EXPORT:public: int __thiscall OGRSpatialReference::SetMC(double,double,double,double)
   /EXPORT:_OSRSetMC
   /EXPORT:public: int __thiscall OGRSpatialReference::SetMercator(double,double,double,double,double)
   /EXPORT:_OSRSetMercator
   /EXPORT:public: int __thiscall OGRSpatialReference::SetMercator2SP(double,double,double,double,double)
   /EXPORT:_OSRSetMollweide
   /EXPORT:public: int __thiscall OGRSpatialReference::SetNZMG(double,double,double,double)
   /EXPORT:_OSRSetNZMG
   /EXPORT:public: int __thiscall OGRSpatialReference::SetOS(double,double,double,double,double)
   /EXPORT:_OSRSetOS
   /EXPORT:_OSRSetOrthographic
   /EXPORT:public: int __thiscall OGRSpatialReference::SetPolyconic(double,double,double,double)
   /EXPORT:_OSRSetPolyconic
   /EXPORT:public: int __thiscall OGRSpatialReference::SetPS(double,double,double,double,double)
   /EXPORT:_OSRSetPS
   /EXPORT:public: int __thiscall OGRSpatialReference::SetRobinson(double,double,double)
   /EXPORT:_OSRSetRobinson
   /EXPORT:public: int __thiscall OGRSpatialReference::SetSinusoidal(double,double,double)
   /EXPORT:_OSRSetSinusoidal
   /EXPORT:public: int __thiscall OGRSpatialReference::SetStereographic(double,double,double,double,double)
   /EXPORT:_OSRSetStereographic
   /EXPORT:public: int __thiscall OGRSpatialReference::SetSOC(double,double,double,double)
   /EXPORT:_OSRSetSOC
   /EXPORT:public: int __thiscall OGRSpatialReference::SetVDG(double,double,double)
   /EXPORT:_OSRSetVDG
   /EXPORT:_OSRSetUTM
   /EXPORT:public: int __thiscall OGRSpatialReference::GetUTMZone(int *)const 
   /EXPORT:_OSRGetUTMZone
   /EXPORT:public: int __thiscall OGRSpatialReference::SetWagner(int,double,double,double)
   /EXPORT:_OSRSetAuthority
   /EXPORT:public: char const * __thiscall OGRSpatialReference::GetAuthorityCode(char const *)const 
   /EXPORT:_OSRGetAuthorityCode
   /EXPORT:public: char const * __thiscall OGRSpatialReference::GetAuthorityName(char const *)const 
   /EXPORT:_OSRGetAuthorityName
   /EXPORT:public: int __thiscall OGRSpatialReference::StripVertical(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::StripCTParms(class OGR_SRSNode *)
   /EXPORT:_OSRStripCTParms
   /EXPORT:public: int __thiscall OGRSpatialReference::IsCompound(void)const 
   /EXPORT:_OSRIsCompound
   /EXPORT:_OSRIsProjected
   /EXPORT:_OSRIsGeocentric
   /EXPORT:_OSRIsGeographic
   /EXPORT:public: int __thiscall OGRSpatialReference::IsLocal(void)const 
   /EXPORT:_OSRIsLocal
   /EXPORT:_OSRIsVertical
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRSpatialReference::CloneGeogCS(void)const 
   /EXPORT:_OSRCloneGeogCS@4
   /EXPORT:public: int __thiscall OGRSpatialReference::IsSameGeogCS(class OGRSpatialReference const *)const 
   /EXPORT:public: int __thiscall OGRSpatialReference::GetTOWGS84(double *,int)const 
   /EXPORT:_OSRIsSameGeogCS
   /EXPORT:public: int __thiscall OGRSpatialReference::IsSameVertCS(class OGRSpatialReference const *)const 
   /EXPORT:_OSRIsSameVertCS
   /EXPORT:public: int __thiscall OGRSpatialReference::IsSame(class OGRSpatialReference const *)const 
   /EXPORT:_OSRIsSame
   /EXPORT:public: int __thiscall OGRSpatialReference::SetTOWGS84(double,double,double,double,double,double,double)
   /EXPORT:_OSRSetTOWGS84
   /EXPORT:_OSRGetTOWGS84
   /EXPORT:public: static int __cdecl OGRSpatialReference::IsLongitudeParameter(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::FixupOrdering(void)
   /EXPORT:_OSRFixupOrdering
   /EXPORT:public: int __thiscall OGRSpatialReference::Fixup(void)
   /EXPORT:_OSRFixup
   /EXPORT:public: char const * __thiscall OGRSpatialReference::GetExtension(char const *,char const *,char const *)const 
   /EXPORT:public: int __thiscall OGRSpatialReference::SetExtension(char const *,char const *,char const *)
   /EXPORT:_OSRCleanup
   /EXPORT:public: char const * __thiscall OGRSpatialReference::GetAxis(char const *,int,enum OGRAxisOrientation *)const 
   /EXPORT:_OSRGetAxis
   /EXPORT:_OSRAxisEnumToName
   /EXPORT:public: int __thiscall OGRSpatialReference::SetAxes(char const *,char const *,enum OGRAxisOrientation,char const *,enum OGRAxisOrientation)
   /EXPORT:_OSRExportToMICoordSys
   /EXPORT:public: int __thiscall OGRSpatialReference::exportToMICoordSys(char * *)const 
   /EXPORT:_OSRImportFromMICoordSys
   /EXPORT:public: int __thiscall OGRSpatialReference::importFromMICoordSys(char const *)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGR_SRSNode::OGR_SRSNode(char const *)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall OGR_SRSNode::~OGR_SRSNode(void)
   /EXPORT:public: void __thiscall OGR_SRSNode::ClearChildren(void)
   /EXPORT:public: class OGR_SRSNode * __thiscall OGR_SRSNode::GetChild(int)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGR_SRSNode::GetChild(int)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGR_SRSNode::GetNode(char const *)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGR_SRSNode::GetNode(char const *)const 
   /EXPORT:public: void __thiscall OGR_SRSNode::AddChild(class OGR_SRSNode *)
   /EXPORT:public: void __thiscall OGR_SRSNode::InsertChild(class OGR_SRSNode *,int)
   /EXPORT:public: void __thiscall OGR_SRSNode::DestroyChild(int)
   /EXPORT:public: int __thiscall OGR_SRSNode::FindChild(char const *)const 
   /EXPORT:public: void __thiscall OGR_SRSNode::SetValue(char const *)
   /EXPORT:public: class OGR_SRSNode * __thiscall OGR_SRSNode::Clone(void)const 
   /EXPORT:private: int __thiscall OGR_SRSNode::NeedsQuoting(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::exportToWkt(char * *)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::exportToPrettyWkt(char * *,int)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::importFromWkt(char * *)
   /EXPORT:public: void __thiscall OGR_SRSNode::MakeValueSafe(void)
   /EXPORT:public: int __thiscall OGR_SRSNode::applyRemapper(char const *,char * *,char * *,int,int)
   /EXPORT:public: void __thiscall OGR_SRSNode::StripNodes(char const *)
   /EXPORT:public: int __thiscall OGR_SRSNode::FixupOrdering(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: __thiscall OGRFieldDefn::OGRFieldDefn(char const *,enum OGRFieldType)
   /EXPORT:private: void __thiscall OGRFieldDefn::Initialize(char const *,enum OGRFieldType)
   /EXPORT:public: __thiscall OGRFieldDefn::OGRFieldDefn(class OGRFieldDefn *)
   /EXPORT:_OGR_Fld_Create
   /EXPORT:public: __thiscall OGRFieldDefn::~OGRFieldDefn(void)
   /EXPORT:_OGR_Fld_Destroy
   /EXPORT:public: void __thiscall OGRFieldDefn::SetName(char const *)
   /EXPORT:_OGR_Fld_SetName
   /EXPORT:_OGR_Fld_GetNameRef
   /EXPORT:_OGR_Fld_GetType
   /EXPORT:_OGR_Fld_SetType
   /EXPORT:public: void __thiscall OGRFieldDefn::SetDefault(union OGRField const *)
   /EXPORT:public: static char const * __cdecl OGRFieldDefn::GetFieldTypeName(enum OGRFieldType)
   /EXPORT:_OGR_GetFieldTypeName
   /EXPORT:_OGR_Fld_GetJustify
   /EXPORT:_OGR_Fld_SetJustify
   /EXPORT:_OGR_Fld_GetWidth
   /EXPORT:_OGR_Fld_SetWidth
   /EXPORT:_OGR_Fld_GetPrecision
   /EXPORT:_OGR_Fld_SetPrecision
   /EXPORT:public: void __thiscall OGRFieldDefn::Set(char const *,enum OGRFieldType,int,int,enum OGRJustification)
   /EXPORT:_OGR_Fld_Set
   /EXPORT:_OGR_Fld_IsIgnored
   /EXPORT:_OGR_Fld_SetIgnored
   /EXPORT:public: int __thiscall OGRFieldDefn::IsSame(class OGRFieldDefn const *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(char const *)
   /EXPORT:public: virtual __thiscall OGRFeatureDefn::~OGRFeatureDefn(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeatureDefn::GetFieldDefn(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:_OGR_FD_Create
   /EXPORT:_OGR_FD_Destroy
   /EXPORT:public: void __thiscall OGRFeatureDefn::Release(void)
   /EXPORT:_OGR_FD_Release
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeatureDefn::Clone(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::AddFieldDefn(class OGRFieldDefn *)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeomType(enum OGRwkbGeometryType)
   /EXPORT:_OGR_FD_GetName
   /EXPORT:_OGR_FD_GetFieldCount
   /EXPORT:_OGR_FD_GetFieldDefn
   /EXPORT:_OGR_FD_AddFieldDefn
   /EXPORT:public: int __thiscall OGRFeatureDefn::DeleteFieldDefn(int)
   /EXPORT:_OGR_FD_DeleteFieldDefn
   /EXPORT:public: int __thiscall OGRFeatureDefn::ReorderFieldDefns(int *)
   /EXPORT:_OGR_FD_GetGeomType
   /EXPORT:_OGR_FD_SetGeomType
   /EXPORT:_OGR_FD_Reference
   /EXPORT:_OGR_FD_Dereference
   /EXPORT:_OGR_FD_GetReferenceCount
   /EXPORT:_OGR_FD_GetFieldIndex
   /EXPORT:_OGR_FD_IsGeometryIgnored
   /EXPORT:_OGR_FD_SetGeometryIgnored
   /EXPORT:_OGR_FD_IsStyleIgnored
   /EXPORT:_OGR_FD_SetStyleIgnored
   /EXPORT:public: static class OGRFeatureDefn * __cdecl OGRFeatureDefn::CreateFeatureDefn(char const *)
   /EXPORT:public: static void __cdecl OGRFeatureDefn::DestroyFeatureDefn(class OGRFeatureDefn *)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsSame(class OGRFeatureDefn const *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(int)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(int)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(int)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(int,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(int,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(int)const 
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRFeature::Equal(class OGRFeature *)
   /EXPORT:public: virtual int __thiscall OGRFeature::SetFID(long)
   /EXPORT:public: virtual char const * __thiscall OGRFeature::GetStyleString(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleString(char const *)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleStringDirectly(char *)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTable(class OGRStyleTable *)
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: virtual __thiscall OGRFeature::~OGRFeature(void)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeatureDefn *)
   /EXPORT:_OGR_F_Create
   /EXPORT:public: int __thiscall OGRFeature::IsFieldSet(int)const 
   /EXPORT:_OGR_F_Destroy
   /EXPORT:public: static class OGRFeature * __cdecl OGRFeature::CreateFeature(class OGRFeatureDefn *)
   /EXPORT:public: static void __cdecl OGRFeature::DestroyFeature(class OGRFeature *)
   /EXPORT:_OGR_F_GetDefnRef
   /EXPORT:public: int __thiscall OGRFeature::SetGeometryDirectly(class OGRGeometry *)
   /EXPORT:_OGR_F_SetGeometryDirectly
   /EXPORT:public: int __thiscall OGRFeature::SetGeometry(class OGRGeometry *)
   /EXPORT:_OGR_F_SetGeometry
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::StealGeometry(void)
   /EXPORT:_OGR_F_StealGeometry
   /EXPORT:_OGR_F_GetGeometryRef
   /EXPORT:public: class OGRFeature * __thiscall OGRFeature::Clone(void)
   /EXPORT:_OGR_F_Clone
   /EXPORT:_OGR_F_GetFieldCount
   /EXPORT:_OGR_F_GetFieldDefnRef
   /EXPORT:_OGR_F_GetFieldIndex
   /EXPORT:_OGR_F_IsFieldSet
   /EXPORT:public: void __thiscall OGRFeature::UnsetField(int)
   /EXPORT:_OGR_F_UnsetField
   /EXPORT:_OGR_F_GetRawFieldRef
   /EXPORT:_OGR_F_GetFieldAsInteger
   /EXPORT:_OGR_F_GetFieldAsDouble
   /EXPORT:_OGR_F_GetFieldAsString
   /EXPORT:_OGR_F_GetFieldAsIntegerList
   /EXPORT:_OGR_F_GetFieldAsDoubleList
   /EXPORT:_OGR_F_GetFieldAsStringList
   /EXPORT:public: unsigned char * __thiscall OGRFeature::GetFieldAsBinary(int,int *)
   /EXPORT:_OGR_F_GetFieldAsBinary
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsDateTime(int,int *,int *,int *,int *,int *,int *,int *)
   /EXPORT:_OGR_F_GetFieldAsDateTime
   /EXPORT:_OGR_F_SetFieldInteger
   /EXPORT:_OGR_F_SetFieldDouble
   /EXPORT:_OGR_F_SetFieldString
   /EXPORT:_OGR_F_SetFieldIntegerList
   /EXPORT:_OGR_F_SetFieldDoubleList
   /EXPORT:_OGR_F_SetFieldStringList
   /EXPORT:public: void __thiscall OGRFeature::SetField(int,int,unsigned char *)
   /EXPORT:_OGR_F_SetFieldBinary
   /EXPORT:_OGR_F_SetFieldDateTime
   /EXPORT:_OGR_F_SetFieldRaw
   /EXPORT:public: void __thiscall OGRFeature::DumpReadable(struct _iobuf *,char * *)
   /EXPORT:_OGR_F_DumpReadable
   /EXPORT:_OGR_F_GetFID
   /EXPORT:_OGR_F_SetFID
   /EXPORT:_OGR_F_Equal
   /EXPORT:public: int __thiscall OGRFeature::SetFrom(class OGRFeature *,int)
   /EXPORT:public: int __thiscall OGRFeature::SetFrom(class OGRFeature *,int *,int)
   /EXPORT:_OGR_F_SetFrom
   /EXPORT:public: int __thiscall OGRFeature::SetFieldsFrom(class OGRFeature *,int *,int)
   /EXPORT:_OGR_F_SetFromWithMap
   /EXPORT:_OGR_F_GetStyleString
   /EXPORT:_OGR_F_SetStyleString
   /EXPORT:_OGR_F_SetStyleStringDirectly
   /EXPORT:public: int __thiscall OGRFeature::RemapFields(class OGRFeatureDefn *,int *)
   /EXPORT:_OGR_F_GetStyleTable
   /EXPORT:_OGR_F_SetStyleTableDirectly
   /EXPORT:_OGR_F_SetStyleTable
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRMultiPoint::getDimension(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRMultiPoint::clone(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiPoint::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRMultiPoint::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRMultiPoint::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRMultiPoint::getGeometryName(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiPoint::addGeometryDirectly(class OGRGeometry *)
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(void)
   /EXPORT:private: int __thiscall OGRMultiPoint::importFromWkt_Bracketed(char * *,int,int)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:_OPTGetProjectionMethods
   /EXPORT:_OPTGetParameterList
   /EXPORT:_OPTGetParameterInfo
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRMultiLineString::getDimension(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRMultiLineString::clone(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiLineString::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRMultiLineString::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRMultiLineString::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRMultiLineString::getGeometryName(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiLineString::addGeometryDirectly(class OGRGeometry *)
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: virtual __thiscall OGRMultiLineString::~OGRMultiLineString(void)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRMultiPolygon::getDimension(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRMultiPolygon::clone(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiPolygon::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRMultiPolygon::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRMultiPolygon::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRMultiPolygon::getGeometryName(void)const 
   /EXPORT:public: virtual double __thiscall OGRMultiPolygon::get_Area(void)const 
   /EXPORT:public: virtual int __thiscall OGRMultiPolygon::addGeometryDirectly(class OGRGeometry *)
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::getDimension(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::IsEmpty(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::empty(void)
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometryCollection::clone(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::getEnvelope(class OGREnvelope3D *)const 
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::getEnvelope(class OGREnvelope *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::WkbSize(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::importFromWkb(unsigned char *,int)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::exportToWkb(enum OGRwkbByteOrder,unsigned char *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRGeometryCollection::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRGeometryCollection::getGeometryName(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::flattenTo2D(void)
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::closeRings(void)
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::setCoordinateDimension(int)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::transform(class OGRCoordinateTransformation *)
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::segmentize(double)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::Equals(class OGRGeometry *)const 
   /EXPORT:public: virtual void __thiscall OGRGeometryCollection::swapXY(void)
   /EXPORT:public: virtual double __thiscall OGRGeometryCollection::get_Length(void)const 
   /EXPORT:public: virtual double __thiscall OGRGeometryCollection::get_Area(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::addGeometry(class OGRGeometry const *)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::addGeometryDirectly(class OGRGeometry *)
   /EXPORT:public: virtual int __thiscall OGRGeometryCollection::removeGeometry(int,int)
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRGeometryCollection::~OGRGeometryCollection(void)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(void)
   /EXPORT:public: int __thiscall OGRGeometryCollection::getNumGeometries(void)const 
   /EXPORT:public: class OGRGeometry * __thiscall OGRGeometryCollection::getGeometryRef(int)
   /EXPORT:public: class OGRGeometry const * __thiscall OGRGeometryCollection::getGeometryRef(int)const 
   /EXPORT:private: int __thiscall OGRGeometryCollection::importFromWkbInternal(unsigned char *,int,int)
   /EXPORT:private: int __thiscall OGRGeometryCollection::importFromWktInternal(char * *,int)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static int OGRGeometry::bGenerate_DB2_V72_BYTE_ORDER,DATA
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRGeometry::getCoordinateDimension(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::IsValid(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::IsSimple(void)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::IsRing(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometry::dumpReadable(struct _iobuf *,char const *,char * *)const 
   /EXPORT:public: virtual char * __thiscall OGRGeometry::exportToGML(char const * const *)const 
   /EXPORT:public: virtual char * __thiscall OGRGeometry::exportToKML(void)const 
   /EXPORT:public: virtual char * __thiscall OGRGeometry::exportToJson(void)const 
   /EXPORT:public: virtual struct GEOSGeom_t * __thiscall OGRGeometry::exportToGEOS(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometry::closeRings(void)
   /EXPORT:public: virtual void __thiscall OGRGeometry::setCoordinateDimension(int)
   /EXPORT:public: virtual void __thiscall OGRGeometry::segmentize(double)
   /EXPORT:public: virtual int __thiscall OGRGeometry::Intersects(class OGRGeometry *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Disjoint(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Touches(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Crosses(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Within(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Contains(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Overlaps(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Boundary(void)const 
   /EXPORT:public: virtual double __thiscall OGRGeometry::Distance(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::ConvexHull(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Buffer(double,int)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Intersection(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Union(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::UnionCascaded(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Difference(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::SymDifference(class OGRGeometry const *)const 
   /EXPORT:public: virtual int __thiscall OGRGeometry::Centroid(class OGRPoint *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Simplify(double)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::Polygonize(void)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::SymmetricDifference(class OGRGeometry const *)const 
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRGeometry::getBoundary(void)const 
   /EXPORT:public: virtual void __thiscall OGRGeometry::swapXY(void)
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: virtual __thiscall OGRGeometry::~OGRGeometry(void)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(void)
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: class CPLMutexHolder & __thiscall CPLMutexHolder::operator=(class CPLMutexHolder const &)
   /EXPORT:_OGR_G_DumpReadable
   /EXPORT:public: void __thiscall OGRGeometry::assignSpatialReference(class OGRSpatialReference *)
   /EXPORT:_OGR_G_AssignSpatialReference
   /EXPORT:public: int __thiscall OGRGeometry::Intersect(class OGRGeometry *)const 
   /EXPORT:_OGR_G_Intersects
   /EXPORT:_OGR_G_Intersect
   /EXPORT:public: int __thiscall OGRGeometry::transformTo(class OGRSpatialReference *)
   /EXPORT:_OGR_G_TransformTo
   /EXPORT:_OGR_G_Transform
   /EXPORT:_OGR_G_Segmentize
   /EXPORT:_OGR_G_GetDimension
   /EXPORT:_OGR_G_GetCoordinateDimension
   /EXPORT:_OGR_G_SetCoordinateDimension
   /EXPORT:public: int __thiscall OGRGeometry::Equal(class OGRGeometry *)const 
   /EXPORT:_OGR_G_Equals
   /EXPORT:_OGR_G_Equal
   /EXPORT:_OGR_G_WkbSize
   /EXPORT:_OGR_G_GetEnvelope
   /EXPORT:_OGR_G_GetEnvelope3D
   /EXPORT:_OGR_G_ImportFromWkb
   /EXPORT:_OGR_G_ExportToWkb
   /EXPORT:_OGR_G_ImportFromWkt
   /EXPORT:_OGR_G_ExportToWkt
   /EXPORT:_OGR_G_GetGeometryType
   /EXPORT:_OGR_G_GetGeometryName
   /EXPORT:_OGR_G_Clone
   /EXPORT:_OGR_G_GetSpatialReference
   /EXPORT:_OGR_G_Empty
   /EXPORT:_OGR_G_IsEmpty
   /EXPORT:_OGR_G_IsValid
   /EXPORT:_OGR_G_IsSimple
   /EXPORT:_OGR_G_IsRing
   /EXPORT:enum OGRwkbGeometryType __cdecl OGRFromOGCGeomType(char const *)
   /EXPORT:char const * __cdecl OGRToOGCGeomType(enum OGRwkbGeometryType)
   /EXPORT:_OGRGeometryTypeToName
   /EXPORT:_OGRMergeGeometryTypes
   /EXPORT:_OGR_G_FlattenTo2D
   /EXPORT:_OGRSetGenerate_DB2_V72_BYTE_ORDER
   /EXPORT:_OGRGetGenerate_DB2_V72_BYTE_ORDER
   /EXPORT:_OGR_G_Distance
   /EXPORT:_OGR_G_ConvexHull
   /EXPORT:_OGR_G_Boundary
   /EXPORT:_OGR_G_GetBoundary
   /EXPORT:_OGR_G_Buffer
   /EXPORT:_OGR_G_Intersection
   /EXPORT:_OGR_G_Union
   /EXPORT:_OGR_G_UnionCascaded
   /EXPORT:_OGR_G_Difference
   /EXPORT:_OGR_G_SymDifference
   /EXPORT:_OGR_G_SymmetricDifference
   /EXPORT:_OGR_G_Disjoint
   /EXPORT:_OGR_G_Touches
   /EXPORT:_OGR_G_Crosses
   /EXPORT:_OGR_G_Within
   /EXPORT:_OGR_G_Contains
   /EXPORT:_OGR_G_Overlaps
   /EXPORT:_OGR_G_CloseRings
   /EXPORT:_OGR_G_Centroid
   /EXPORT:_OGR_G_PointOnSurface
   /EXPORT:_OGR_G_Simplify
   /EXPORT:public: class OGRGeometry * __thiscall OGRGeometry::SimplifyPreserveTopology(double)const 
   /EXPORT:_OGR_G_SimplifyPreserveTopology
   /EXPORT:_OGR_G_Polygonize
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRStyleTable::OGRStyleTable(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable & __thiscall OGRStyleTable::operator=(class OGRStyleTable const &)
   /EXPORT:public: class OGRStyleTable * __thiscall OGRStyleMgr::GetDataSetStyleTable(void)
   /EXPORT:public: class OGRStyleMgr & __thiscall OGRStyleMgr::operator=(class OGRStyleMgr const &)
   /EXPORT:public: void __thiscall OGRStyleMgr::`default constructor closure'(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(void)
   /EXPORT:const OGRStyleTool::`vftable',DATA
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleModified(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleModified(void)
   /EXPORT:public: int __thiscall OGRStyleTool::IsStyleParsed(void)
   /EXPORT:public: void __thiscall OGRStyleTool::StyleParsed(void)
   /EXPORT:public: enum ogr_style_tool_units_id __thiscall OGRStyleTool::GetUnit(void)
   /EXPORT:public: __thiscall OGRStyleTool::OGRStyleTool(class OGRStyleTool const &)
   /EXPORT:public: class OGRStyleTool & __thiscall OGRStyleTool::operator=(class OGRStyleTool const &)
   /EXPORT:public: char const * __thiscall OGRStylePen::Color(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::Width(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetWidth(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Pattern(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPattern(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Id(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStylePen::PerpendicularOffset(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPerpendicularOffset(double)
   /EXPORT:public: char const * __thiscall OGRStylePen::Cap(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetCap(char const *)
   /EXPORT:public: char const * __thiscall OGRStylePen::Join(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetJoin(char const *)
   /EXPORT:public: int __thiscall OGRStylePen::Priority(int &)
   /EXPORT:public: void __thiscall OGRStylePen::SetPriority(int)
   /EXPORT:public: __thiscall OGRStylePen::OGRStylePen(class OGRStylePen const &)
   /EXPORT:const OGRStylePen::`vftable',DATA
   /EXPORT:public: class OGRStylePen & __thiscall OGRStylePen::operator=(class OGRStylePen const &)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetForeColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleBrush::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleBrush::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetAngle(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleBrush::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetSpacingY(double)
   /EXPORT:public: int __thiscall OGRStyleBrush::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleBrush::SetPriority(int)
   /EXPORT:public: __thiscall OGRStyleBrush::OGRStyleBrush(class OGRStyleBrush const &)
   /EXPORT:const OGRStyleBrush::`vftable',DATA
   /EXPORT:public: class OGRStyleBrush & __thiscall OGRStyleBrush::operator=(class OGRStyleBrush const &)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Id(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetId(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::Color(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetColor(char const *)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSize(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Step(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetStep(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Offset(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOffset(double)
   /EXPORT:public: double __thiscall OGRStyleSymbol::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleSymbol::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetPriority(int)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetFontName(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleSymbol::OColor(int &)
   /EXPORT:public: void __thiscall OGRStyleSymbol::SetOColor(char const *)
   /EXPORT:public: __thiscall OGRStyleSymbol::OGRStyleSymbol(class OGRStyleSymbol const &)
   /EXPORT:const OGRStyleSymbol::`vftable',DATA
   /EXPORT:public: class OGRStyleSymbol & __thiscall OGRStyleSymbol::operator=(class OGRStyleSymbol const &)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::FontName(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetFontName(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Size(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSize(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::TextString(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetTextString(char const *)
   /EXPORT:public: double __thiscall OGRStyleLabel::Angle(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAngle(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ForeColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetForColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::BackColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBackColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::Placement(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPlacement(char const *)
   /EXPORT:public: int __thiscall OGRStyleLabel::Anchor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAnchor(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingX(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingX(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::SpacingY(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetSpacingY(double)
   /EXPORT:public: double __thiscall OGRStyleLabel::Perp(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPerp(double)
   /EXPORT:public: int __thiscall OGRStyleLabel::Bold(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetBold(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Italic(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetItalic(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Underline(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetUnderline(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Priority(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetPriority(int)
   /EXPORT:public: int __thiscall OGRStyleLabel::Strikeout(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStrikeout(int)
   /EXPORT:public: double __thiscall OGRStyleLabel::Stretch(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetStretch(double)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentHor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentHor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::AdjustmentVert(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetAdjustmentVert(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::ShadowColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetShadowColor(char const *)
   /EXPORT:public: char const * __thiscall OGRStyleLabel::OutlineColor(int &)
   /EXPORT:public: void __thiscall OGRStyleLabel::SetOutlineColor(char const *)
   /EXPORT:public: __thiscall OGRStyleLabel::OGRStyleLabel(class OGRStyleLabel const &)
   /EXPORT:const OGRStyleLabel::`vftable',DATA
   /EXPORT:public: class OGRStyleLabel & __thiscall OGRStyleLabel::operator=(class OGRStyleLabel const &)
   /EXPORT:public: char const * __thiscall OGRFieldDefn::GetNameRef(void)
   /EXPORT:public: enum OGRFieldType __thiscall OGRFieldDefn::GetType(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetType(enum OGRFieldType)
   /EXPORT:public: enum OGRJustification __thiscall OGRFieldDefn::GetJustify(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetJustify(enum OGRJustification)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetWidth(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetWidth(int)
   /EXPORT:public: int __thiscall OGRFieldDefn::GetPrecision(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetPrecision(int)
   /EXPORT:public: union OGRField const * __thiscall OGRFieldDefn::GetDefaultRef(void)
   /EXPORT:public: int __thiscall OGRFieldDefn::IsIgnored(void)
   /EXPORT:public: void __thiscall OGRFieldDefn::SetIgnored(int)
   /EXPORT:public: class OGRFieldDefn & __thiscall OGRFieldDefn::operator=(class OGRFieldDefn const &)
   /EXPORT:public: char const * __thiscall OGRFeatureDefn::GetName(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetFieldCount(void)
   /EXPORT:public: enum OGRwkbGeometryType __thiscall OGRFeatureDefn::GetGeomType(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Reference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::Dereference(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::GetReferenceCount(void)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsGeometryIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetGeometryIgnored(int)
   /EXPORT:public: int __thiscall OGRFeatureDefn::IsStyleIgnored(void)
   /EXPORT:public: void __thiscall OGRFeatureDefn::SetStyleIgnored(int)
   /EXPORT:public: __thiscall OGRFeatureDefn::OGRFeatureDefn(class OGRFeatureDefn const &)
   /EXPORT:const OGRFeatureDefn::`vftable',DATA
   /EXPORT:public: class OGRFeatureDefn & __thiscall OGRFeatureDefn::operator=(class OGRFeatureDefn const &)
   /EXPORT:public: void __thiscall OGRFeatureDefn::`default constructor closure'(void)
   /EXPORT:public: class OGRFeatureDefn * __thiscall OGRFeature::GetDefnRef(void)
   /EXPORT:public: class OGRGeometry * __thiscall OGRFeature::GetGeometryRef(void)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldCount(void)
   /EXPORT:public: class OGRFieldDefn * __thiscall OGRFeature::GetFieldDefnRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldIndex(char const *)
   /EXPORT:public: union OGRField * __thiscall OGRFeature::GetRawFieldRef(int)
   /EXPORT:public: int __thiscall OGRFeature::GetFieldAsInteger(char const *)
   /EXPORT:public: double __thiscall OGRFeature::GetFieldAsDouble(char const *)
   /EXPORT:public: char const * __thiscall OGRFeature::GetFieldAsString(char const *)
   /EXPORT:public: int const * __thiscall OGRFeature::GetFieldAsIntegerList(char const *,int *)
   /EXPORT:public: double const * __thiscall OGRFeature::GetFieldAsDoubleList(char const *,int *)
   /EXPORT:public: char * * __thiscall OGRFeature::GetFieldAsStringList(char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,double)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char const *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,double *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,char * *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,union OGRField *)
   /EXPORT:public: void __thiscall OGRFeature::SetField(char const *,int,int,int,int,int,int,int)
   /EXPORT:public: long __thiscall OGRFeature::GetFID(void)
   /EXPORT:public: virtual class OGRStyleTable * __thiscall OGRFeature::GetStyleTable(void)
   /EXPORT:public: virtual void __thiscall OGRFeature::SetStyleTableDirectly(class OGRStyleTable *)
   /EXPORT:public: __thiscall OGRFeature::OGRFeature(class OGRFeature const &)
   /EXPORT:const OGRFeature::`vftable',DATA
   /EXPORT:public: class OGRFeature & __thiscall OGRFeature::operator=(class OGRFeature const &)
   /EXPORT:public: void * __thiscall OGRFeatureQuery::GetSWGExpr(void)
   /EXPORT:public: class OGRFeatureQuery & __thiscall OGRFeatureQuery::operator=(class OGRFeatureQuery const &)
   /EXPORT:public: virtual class OGRSpatialReference * __thiscall OGRLayer::GetSpatialRef(void)
   /EXPORT:public: class OGRLayerAttrIndex * __thiscall OGRLayer::GetIndex(void)
   /EXPORT:public: __thiscall OGRLayer::OGRLayer(class OGRLayer const &)
   /EXPORT:const OGRLayer::`vftable',DATA
   /EXPORT:public: class OGRLayer & __thiscall OGRLayer::operator=(class OGRLayer const &)
   /EXPORT:public: __thiscall OGRDataSource::OGRDataSource(class OGRDataSource const &)
   /EXPORT:const OGRDataSource::`vftable',DATA
   /EXPORT:public: class OGRDataSource & __thiscall OGRDataSource::operator=(class OGRDataSource const &)
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(void)
   /EXPORT:const OGRSFDriver::`vftable',DATA
   /EXPORT:public: __thiscall OGRSFDriver::OGRSFDriver(class OGRSFDriver const &)
   /EXPORT:public: class OGRSFDriver & __thiscall OGRSFDriver::operator=(class OGRSFDriver const &)
   /EXPORT:public: int __thiscall OGRSFDriverRegistrar::GetOpenDSCount(void)
   /EXPORT:public: class OGRSFDriverRegistrar & __thiscall OGRSFDriverRegistrar::operator=(class OGRSFDriverRegistrar const &)
   /EXPORT:void __cdecl OGRMakeWktCoordinate(char *,double,double,double,int)
   /EXPORT:char const * __cdecl OGRWktReadToken(char const *,char *)
   /EXPORT:char const * __cdecl OGRWktReadPoints(char const *,class OGRRawPoint * *,double * *,int *,int *)
   /EXPORT:_OGRMalloc
   /EXPORT:_OGRCalloc
   /EXPORT:_OGRRealloc
   /EXPORT:_OGRFree
   /EXPORT:int __cdecl OGRGeneralCmdLineProcessor(int,char * * *,int)
   /EXPORT:_OGRParseDate
   /EXPORT:int __cdecl OGRParseXMLDateTime(char const *,int *,int *,int *,int *,int *,float *,int *)
   /EXPORT:int __cdecl OGRParseRFC822DateTime(char const *,int *,int *,int *,int *,int *,int *,int *)
   /EXPORT:int __cdecl OGRGetDayOfWeek(int,int,int)
   /EXPORT:char * __cdecl OGRGetRFC822DateTime(int,int,int,int,int,int,int)
   /EXPORT:char * __cdecl OGRGetXMLDateTime(int,int,int,int,int,int,int)
   /EXPORT:char * __cdecl OGRGetXML_UTF8_EscapedString(char const *)
   /EXPORT:int __cdecl OGRCheckPermutation(int *,int)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRLinearRing::clone(void)const 
   /EXPORT:public: virtual int __thiscall OGRLinearRing::WkbSize(void)const 
   /EXPORT:public: virtual int __thiscall OGRLinearRing::importFromWkb(unsigned char *,int)
   /EXPORT:public: virtual int __thiscall OGRLinearRing::exportToWkb(enum OGRwkbByteOrder,unsigned char *)const 
   /EXPORT:public: virtual char const * __thiscall OGRLinearRing::getGeometryName(void)const 
   /EXPORT:public: virtual void __thiscall OGRLinearRing::closeRings(void)
   /EXPORT:private: virtual int __thiscall OGRLinearRing::_WkbSize(int)const 
   /EXPORT:private: virtual int __thiscall OGRLinearRing::_importFromWkb(enum OGRwkbByteOrder,int,unsigned char *,int)
   /EXPORT:private: virtual int __thiscall OGRLinearRing::_exportToWkb(enum OGRwkbByteOrder,int,unsigned char *)const 
   /EXPORT:public: virtual int __thiscall OGRLinearRing::isClockwise(void)const 
   /EXPORT:public: virtual void __thiscall OGRLinearRing::reverseWindingOrder(void)
   /EXPORT:public: virtual double __thiscall OGRLinearRing::get_Area(void)const 
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: virtual __thiscall OGRLinearRing::~OGRLinearRing(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(void)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing *)
   /EXPORT:public: int __thiscall OGRLinearRing::isPointInRing(class OGRPoint const *,int)const 
   /EXPORT:public: int __thiscall OGRLinearRing::isPointOnRingBoundary(class OGRPoint const *,int)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRPolygon::getDimension(void)const 
   /EXPORT:public: virtual int __thiscall OGRPolygon::IsEmpty(void)const 
   /EXPORT:public: virtual void __thiscall OGRPolygon::empty(void)
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRPolygon::clone(void)const 
   /EXPORT:public: virtual void __thiscall OGRPolygon::getEnvelope(class OGREnvelope3D *)const 
   /EXPORT:public: virtual void __thiscall OGRPolygon::getEnvelope(class OGREnvelope *)const 
   /EXPORT:public: virtual int __thiscall OGRPolygon::WkbSize(void)const 
   /EXPORT:public: virtual int __thiscall OGRPolygon::importFromWkb(unsigned char *,int)
   /EXPORT:public: virtual int __thiscall OGRPolygon::exportToWkb(enum OGRwkbByteOrder,unsigned char *)const 
   /EXPORT:public: virtual int __thiscall OGRPolygon::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRPolygon::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRPolygon::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRPolygon::getGeometryName(void)const 
   /EXPORT:public: virtual void __thiscall OGRPolygon::flattenTo2D(void)
   /EXPORT:public: virtual void __thiscall OGRPolygon::closeRings(void)
   /EXPORT:public: virtual void __thiscall OGRPolygon::setCoordinateDimension(int)
   /EXPORT:public: virtual int __thiscall OGRPolygon::transform(class OGRCoordinateTransformation *)
   /EXPORT:public: virtual void __thiscall OGRPolygon::segmentize(double)
   /EXPORT:public: virtual int __thiscall OGRPolygon::Equals(class OGRGeometry *)const 
   /EXPORT:public: virtual void __thiscall OGRPolygon::swapXY(void)
   /EXPORT:public: virtual double __thiscall OGRPolygon::get_Area(void)const 
   /EXPORT:public: virtual int __thiscall OGRPolygon::PointOnSurface(class OGRPoint *)const 
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: virtual __thiscall OGRPolygon::~OGRPolygon(void)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(void)
   /EXPORT:public: void __thiscall OGRPolygon::addRing(class OGRLinearRing *)
   /EXPORT:public: class OGRLinearRing * __thiscall OGRPolygon::getExteriorRing(void)
   /EXPORT:public: class OGRLinearRing const * __thiscall OGRPolygon::getExteriorRing(void)const 
   /EXPORT:public: int __thiscall OGRPolygon::getNumInteriorRings(void)const 
   /EXPORT:public: class OGRLinearRing * __thiscall OGRPolygon::getInteriorRing(int)
   /EXPORT:public: class OGRLinearRing const * __thiscall OGRPolygon::getInteriorRing(int)const 
   /EXPORT:public: void __thiscall OGRPolygon::addRingDirectly(class OGRLinearRing *)
   /EXPORT:public: int __thiscall OGRPolygon::IsPointOnSurface(class OGRPoint const *)const 
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRLineString::getDimension(void)const 
   /EXPORT:public: virtual int __thiscall OGRLineString::IsEmpty(void)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::empty(void)
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRLineString::clone(void)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::getEnvelope(class OGREnvelope3D *)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::getEnvelope(class OGREnvelope *)const 
   /EXPORT:public: virtual int __thiscall OGRLineString::WkbSize(void)const 
   /EXPORT:public: virtual int __thiscall OGRLineString::importFromWkb(unsigned char *,int)
   /EXPORT:public: virtual int __thiscall OGRLineString::exportToWkb(enum OGRwkbByteOrder,unsigned char *)const 
   /EXPORT:public: virtual int __thiscall OGRLineString::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRLineString::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRLineString::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRLineString::getGeometryName(void)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::flattenTo2D(void)
   /EXPORT:public: virtual void __thiscall OGRLineString::setCoordinateDimension(int)
   /EXPORT:public: virtual int __thiscall OGRLineString::transform(class OGRCoordinateTransformation *)
   /EXPORT:public: virtual void __thiscall OGRLineString::segmentize(double)
   /EXPORT:public: virtual int __thiscall OGRLineString::Equals(class OGRGeometry *)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::swapXY(void)
   /EXPORT:public: virtual double __thiscall OGRLineString::get_Length(void)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::StartPoint(class OGRPoint *)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::EndPoint(class OGRPoint *)const 
   /EXPORT:public: virtual void __thiscall OGRLineString::Value(double,class OGRPoint *)const 
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: virtual __thiscall OGRLineString::~OGRLineString(void)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(void)
   /EXPORT:protected: void __thiscall OGRLineString::Make2D(void)
   /EXPORT:public: void __thiscall OGRLineString::setPoints(int,class OGRRawPoint *,double *)
   /EXPORT:public: void __thiscall OGRLineString::setNumPoints(int)
   /EXPORT:protected: void __thiscall OGRLineString::Make3D(void)
   /EXPORT:public: void __thiscall OGRLineString::getPoint(int,class OGRPoint *)const 
   /EXPORT:public: double __thiscall OGRLineString::getZ(int)const 
   /EXPORT:public: void __thiscall OGRLineString::setPoint(int,class OGRPoint *)
   /EXPORT:public: void __thiscall OGRLineString::setPoint(int,double,double,double)
   /EXPORT:public: void __thiscall OGRLineString::setPoint(int,double,double)
   /EXPORT:public: void __thiscall OGRLineString::addPoint(class OGRPoint *)
   /EXPORT:public: void __thiscall OGRLineString::addPoint(double,double,double)
   /EXPORT:public: void __thiscall OGRLineString::addPoint(double,double)
   /EXPORT:public: void __thiscall OGRLineString::setPoints(int,double *,double *,double *)
   /EXPORT:public: void __thiscall OGRLineString::getPoints(class OGRRawPoint *,double *)const 
   /EXPORT:public: void __thiscall OGRLineString::getPoints(void *,int,void *,int,void *,int)const 
   /EXPORT:public: void __thiscall OGRLineString::reversePoints(void)
   /EXPORT:public: void __thiscall OGRLineString::addSubLineString(class OGRLineString const *,int,int)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:_OGR_G_GetPointCount
   /EXPORT:_OGR_G_GetX
   /EXPORT:_OGR_G_GetY
   /EXPORT:_OGR_G_GetZ
   /EXPORT:_OGR_G_GetPoints
   /EXPORT:_OGR_G_GetPoint
   /EXPORT:_OGR_G_SetPoint
   /EXPORT:_OGR_G_SetPoint_2D
   /EXPORT:_OGR_G_AddPoint
   /EXPORT:_OGR_G_AddPoint_2D
   /EXPORT:_OGR_G_GetGeometryCount
   /EXPORT:_OGR_G_GetGeometryRef
   /EXPORT:_OGR_G_AddGeometry
   /EXPORT:_OGR_G_AddGeometryDirectly
   /EXPORT:_OGR_G_RemoveGeometry
   /EXPORT:_OGR_G_Length
   /EXPORT:_OGR_G_Area
   /EXPORT:_OGR_G_GetArea

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRCurve::get_IsClosed(void)const 
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: virtual __thiscall OGRCurve::~OGRCurve(void)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: virtual int __thiscall OGRPoint::getDimension(void)const 
   /EXPORT:public: virtual int __thiscall OGRPoint::IsEmpty(void)const 
   /EXPORT:public: virtual void __thiscall OGRPoint::empty(void)
   /EXPORT:public: virtual class OGRGeometry * __thiscall OGRPoint::clone(void)const 
   /EXPORT:public: virtual void __thiscall OGRPoint::getEnvelope(class OGREnvelope3D *)const 
   /EXPORT:public: virtual void __thiscall OGRPoint::getEnvelope(class OGREnvelope *)const 
   /EXPORT:public: virtual int __thiscall OGRPoint::WkbSize(void)const 
   /EXPORT:public: virtual int __thiscall OGRPoint::importFromWkb(unsigned char *,int)
   /EXPORT:public: virtual int __thiscall OGRPoint::exportToWkb(enum OGRwkbByteOrder,unsigned char *)const 
   /EXPORT:public: virtual int __thiscall OGRPoint::importFromWkt(char * *)
   /EXPORT:public: virtual int __thiscall OGRPoint::exportToWkt(char * *)const 
   /EXPORT:public: virtual enum OGRwkbGeometryType __thiscall OGRPoint::getGeometryType(void)const 
   /EXPORT:public: virtual char const * __thiscall OGRPoint::getGeometryName(void)const 
   /EXPORT:public: virtual void __thiscall OGRPoint::flattenTo2D(void)
   /EXPORT:public: virtual void __thiscall OGRPoint::setCoordinateDimension(int)
   /EXPORT:public: virtual int __thiscall OGRPoint::transform(class OGRCoordinateTransformation *)
   /EXPORT:public: virtual int __thiscall OGRPoint::Equals(class OGRGeometry *)const 
   /EXPORT:public: virtual void __thiscall OGRPoint::swapXY(void)
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: virtual __thiscall OGRPoint::~OGRPoint(void)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(void)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(double,double,double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(double,double)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

   Linker Directives
   -----------------
   /FAILIFMISMATCH:"_MSC_VER=1600"
   /FAILIFMISMATCH:"_ITERATOR_DEBUG_LEVEL=0"
   /DEFAULTLIB:"msvcprt"
   /DEFAULTLIB:"MSVCRT"
   /DEFAULTLIB:"OLDNAMES"
   /EXPORT:public: static unsigned int const std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos,DATA
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(void)
   /EXPORT:public: __thiscall OGREnvelope::OGREnvelope(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope::Merge(class OGREnvelope const &)
   /EXPORT:public: void __thiscall OGREnvelope::Merge(double,double)
   /EXPORT:public: void __thiscall OGREnvelope::Intersect(class OGREnvelope const &)
   /EXPORT:public: int __thiscall OGREnvelope::Intersects(class OGREnvelope const &)const 
   /EXPORT:public: int __thiscall OGREnvelope::Contains(class OGREnvelope const &)const 
   /EXPORT:public: class OGREnvelope & __thiscall OGREnvelope::operator=(class OGREnvelope const &)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(void)
   /EXPORT:public: __thiscall OGREnvelope3D::OGREnvelope3D(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::IsInit(void)const 
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(class OGREnvelope3D const &)
   /EXPORT:public: void __thiscall OGREnvelope3D::Merge(double,double,double)
   /EXPORT:public: void __thiscall OGREnvelope3D::Intersect(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGREnvelope3D::Intersects(class OGREnvelope3D const &)const 
   /EXPORT:public: int __thiscall OGREnvelope3D::Contains(class OGREnvelope3D const &)const 
   /EXPORT:public: class OGREnvelope3D & __thiscall OGREnvelope3D::operator=(class OGREnvelope3D const &)
   /EXPORT:public: int __thiscall OGR_SRSNode::IsLeafNode(void)const 
   /EXPORT:public: int __thiscall OGR_SRSNode::GetChildCount(void)const 
   /EXPORT:public: char const * __thiscall OGR_SRSNode::GetValue(void)const 
   /EXPORT:public: class OGR_SRSNode & __thiscall OGR_SRSNode::operator=(class OGR_SRSNode const &)
   /EXPORT:public: void __thiscall OGR_SRSNode::`default constructor closure'(void)
   /EXPORT:public: int __thiscall OGRSpatialReference::GetReferenceCount(void)const 
   /EXPORT:public: class OGR_SRSNode * __thiscall OGRSpatialReference::GetRoot(void)
   /EXPORT:public: class OGR_SRSNode const * __thiscall OGRSpatialReference::GetRoot(void)const 
   /EXPORT:public: void __thiscall OGRSpatialReference::`default constructor closure'(void)
   /EXPORT:public: virtual __thiscall OGRCoordinateTransformation::~OGRCoordinateTransformation(void)
   /EXPORT:const OGRCoordinateTransformation::`vftable',DATA
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(void)
   /EXPORT:public: __thiscall OGRCoordinateTransformation::OGRCoordinateTransformation(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRCoordinateTransformation & __thiscall OGRCoordinateTransformation::operator=(class OGRCoordinateTransformation const &)
   /EXPORT:public: class OGRSpatialReference * __thiscall OGRGeometry::getSpatialReference(void)const 
   /EXPORT:public: __thiscall OGRGeometry::OGRGeometry(class OGRGeometry const &)
   /EXPORT:const OGRGeometry::`vftable',DATA
   /EXPORT:public: class OGRGeometry & __thiscall OGRGeometry::operator=(class OGRGeometry const &)
   /EXPORT:public: double __thiscall OGRPoint::getX(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getY(void)const 
   /EXPORT:public: double __thiscall OGRPoint::getZ(void)const 
   /EXPORT:public: void __thiscall OGRPoint::setX(double)
   /EXPORT:public: void __thiscall OGRPoint::setY(double)
   /EXPORT:public: void __thiscall OGRPoint::setZ(double)
   /EXPORT:public: __thiscall OGRPoint::OGRPoint(class OGRPoint const &)
   /EXPORT:const OGRPoint::`vftable',DATA
   /EXPORT:public: class OGRPoint & __thiscall OGRPoint::operator=(class OGRPoint const &)
   /EXPORT:public: __thiscall OGRCurve::OGRCurve(class OGRCurve const &)
   /EXPORT:const OGRCurve::`vftable',DATA
   /EXPORT:public: class OGRCurve & __thiscall OGRCurve::operator=(class OGRCurve const &)
   /EXPORT:public: int __thiscall OGRLineString::getNumPoints(void)const 
   /EXPORT:public: double __thiscall OGRLineString::getX(int)const 
   /EXPORT:public: double __thiscall OGRLineString::getY(int)const 
   /EXPORT:public: __thiscall OGRLineString::OGRLineString(class OGRLineString const &)
   /EXPORT:const OGRLineString::`vftable',DATA
   /EXPORT:public: class OGRLineString & __thiscall OGRLineString::operator=(class OGRLineString const &)
   /EXPORT:public: __thiscall OGRLinearRing::OGRLinearRing(class OGRLinearRing const &)
   /EXPORT:const OGRLinearRing::`vftable',DATA
   /EXPORT:public: class OGRLinearRing & __thiscall OGRLinearRing::operator=(class OGRLinearRing const &)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(void)
   /EXPORT:const OGRSurface::`vftable',DATA
   /EXPORT:public: virtual __thiscall OGRSurface::~OGRSurface(void)
   /EXPORT:public: __thiscall OGRSurface::OGRSurface(class OGRSurface const &)
   /EXPORT:public: class OGRSurface & __thiscall OGRSurface::operator=(class OGRSurface const &)
   /EXPORT:public: __thiscall OGRPolygon::OGRPolygon(class OGRPolygon const &)
   /EXPORT:const OGRPolygon::`vftable',DATA
   /EXPORT:public: class OGRPolygon & __thiscall OGRPolygon::operator=(class OGRPolygon const &)
   /EXPORT:public: __thiscall OGRGeometryCollection::OGRGeometryCollection(class OGRGeometryCollection const &)
   /EXPORT:const OGRGeometryCollection::`vftable',DATA
   /EXPORT:public: class OGRGeometryCollection & __thiscall OGRGeometryCollection::operator=(class OGRGeometryCollection const &)
   /EXPORT:public: virtual __thiscall OGRMultiPolygon::~OGRMultiPolygon(void)
   /EXPORT:public: __thiscall OGRMultiPolygon::OGRMultiPolygon(class OGRMultiPolygon const &)
   /EXPORT:const OGRMultiPolygon::`vftable',DATA
   /EXPORT:public: class OGRMultiPolygon & __thiscall OGRMultiPolygon::operator=(class OGRMultiPolygon const &)
   /EXPORT:public: virtual __thiscall OGRMultiPoint::~OGRMultiPoint(void)
   /EXPORT:public: __thiscall OGRMultiPoint::OGRMultiPoint(class OGRMultiPoint const &)
   /EXPORT:const OGRMultiPoint::`vftable',DATA
   /EXPORT:public: class OGRMultiPoint & __thiscall OGRMultiPoint::operator=(class OGRMultiPoint const &)
   /EXPORT:public: __thiscall OGRMultiLineString::OGRMultiLineString(class OGRMultiLineString const &)
   /EXPORT:const OGRMultiLineString::`vftable',DATA
   /EXPORT:public: class OGRMultiLineString & __thiscall OGRMultiLineString::operator=(class OGRMultiLineString const &)
   /EXPORT:public: class OGRGeometryFactory & __thiscall OGRGeometryFactory::operator=(class OGRGeometryFactory const &)
   /EXPORT:public: __thiscall CPLString::CPLString(void)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: __thiscall CPLString::CPLString(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *)
   /EXPORT:public: __thiscall CPLString::operator char const *(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](unsigned int)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](unsigned int)const 
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned int)const 
   /EXPORT:public: char & __thiscall CPLString::operator[](int)
   /EXPORT:public: char const & __thiscall CPLString::operator[](int)const 
   /EXPORT:public: void __thiscall CPLString::Clear(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int)
   /EXPORT:public: void __thiscall CPLString::Seize(char *)
   /EXPORT:public: __thiscall CPLString::~CPLString(void)
   /EXPORT:public: class CPLString & __thiscall CPLString::operator=(class CPLString const &)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: class std::_String_val<char,class std::allocator<char> > & __thiscall std::_String_val<char,class std::allocator<char> >::operator=(class std::_String_val<char,class std::allocator<char> > const &)
   /EXPORT:public: void __thiscall std::_String_val<char,class std::allocator<char> >::`default constructor closure'(void)
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::_String_val<char,class std::allocator<char> >(class std::allocator<char>)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
   /EXPORT:public: __thiscall CPLString::CPLString(class CPLString const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: int __thiscall CPLStringList::size(void)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::InsertString(int,char const *)
   /EXPORT:public: int __thiscall CPLStringList::FindString(char const *)const 
   /EXPORT:public: int __thiscall CPLStringList::PartialFindString(char const *)const 
   /EXPORT:public: class CPLStringList & __thiscall CPLStringList::operator=(char * *)
   /EXPORT:public: char * __thiscall CPLStringList::operator[](unsigned int)
   /EXPORT:public: char const * __thiscall CPLStringList::operator[](unsigned int)const 
   /EXPORT:public: char * * __thiscall CPLStringList::List(void)
   /EXPORT:public: int __thiscall CPLStringList::IsSorted(void)const 
   /EXPORT:public: __thiscall CPLStringList::operator char * *(void)
   /EXPORT:public: static int __cdecl OGRGeometryFactory::createFromWkb(unsigned char *,class OGRSpatialReference *,class OGRGeometry * *,int)
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::createGeometry(enum OGRwkbGeometryType)
   /EXPORT:_OGR_G_CreateFromWkb
   /EXPORT:public: static int __cdecl OGRGeometryFactory::createFromWkt(char * *,class OGRSpatialReference *,class OGRGeometry * *)
   /EXPORT:_OGR_G_CreateFromWkt
   /EXPORT:_OGR_G_CreateGeometry
   /EXPORT:public: static void __cdecl OGRGeometryFactory::destroyGeometry(class OGRGeometry *)
   /EXPORT:_OGR_G_DestroyGeometry
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::forceToPolygon(class OGRGeometry *)
   /EXPORT:_OGR_G_ForceToPolygon
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::forceToMultiPolygon(class OGRGeometry *)
   /EXPORT:_OGR_G_ForceToMultiPolygon
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::forceToMultiPoint(class OGRGeometry *)
   /EXPORT:_OGR_G_ForceToMultiPoint
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::forceToMultiLineString(class OGRGeometry *)
   /EXPORT:_OGR_G_ForceToMultiLineString
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::organizePolygons(class OGRGeometry * *,int,int *,char const * *)
   /EXPORT:public: static int __cdecl OGRGeometryFactory::haveGEOS(void)
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::createFromGML(char const *)
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::createFromGEOS(struct GEOSGeom_t *)
   /EXPORT:public: static void * __cdecl OGRGeometryFactory::getGEOSGeometryFactory(void)
   /EXPORT:public: static int __cdecl OGRGeometryFactory::createFromFgf(unsigned char *,class OGRSpatialReference *,class OGRGeometry * *,int,int *)
   /EXPORT:private: static int __cdecl OGRGeometryFactory::createFromFgfInternal(unsigned char *,class OGRSpatialReference *,class OGRGeometry * *,int,int *,int)
   /EXPORT:_OGR_G_CreateFromFgf
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::transformWithOptions(class OGRGeometry const *,class OGRCoordinateTransformation *,char * *)
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::approximateArcAngles(double,double,double,double,double,double,double,double,double)
   /EXPORT:_OGR_G_ApproximateArcAngles
   /EXPORT:public: static class OGRGeometry * __cdecl OGRGeometryFactory::forceToLineString(class OGRGeometry *,bool)
   /EXPORT:_OGR_G_ForceToLineString
   /EXPORT:public: __thiscall std::_String_val<char,class std::allocator<char> >::~_String_val<char,class std::allocator<char> >(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy(bool,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,unsigned int)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,unsigned int,class std::allocator<char> const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned int,char)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned int,char,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const *,char const *,class std::allocator<char> const &)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::allocator<char> __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::get_allocator(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned int)
   /EXPORT:public: char * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Myptr(void)const 
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow(unsigned int,bool)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xran(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Inside(char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Chassign(unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const *,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const *,char const *)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned int,unsigned int,char)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char)
   /EXPORT:public: static unsigned int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Pdif(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,char const *)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::clear(void)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(unsigned int,unsigned int,unsigned int,char)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *,unsigned int)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,char const *)
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace(class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,char)
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rend(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cbegin(void)const 
   /EXPORT:public: class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::cend(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crbegin(void)const 
   /EXPORT:public: class std::reverse_iterator<class std::_String_const_iterator<char,struct std::char_traits<char>,class std::allocator<char> > > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::crend(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::shrink_to_fit(void)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::capacity(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::at(unsigned int)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::pop_back(void)
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void)const 
   /EXPORT:public: char & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)
   /EXPORT:public: char const & __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::back(void)const 
   /EXPORT:public: char const * __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned int,char)
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned int)
   /EXPORT:public: bool __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::copy(char *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_s(char *,unsigned int,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_first_not_of(char,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char const *,unsigned int)const 
   /EXPORT:public: unsigned int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_not_of(char,unsigned int)const 
   /EXPORT:public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr(unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int,unsigned int)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(char const *)const 
   /EXPORT:public: int __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(unsigned int,unsigned int,char const *)const 
   /EXPORT:public: void __thiscall std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy(unsigned int,unsigned int)

  Summary

          A5 .bss
        7A73 .data
      5E1240 .debug$S
        12C0 .debug$T
       E77BA .drectve
       39CBD .rdata
        A674 .rdata$r
        1080 .sxdata
      156C8A .text
        AACE .text$x
        E394 .xdata$x
